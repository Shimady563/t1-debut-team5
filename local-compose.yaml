services:
  backend:
    container_name: backend
    image: shimady563/t1-debut-team5-backend:latest
    ports:
      - '8080:8080'
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/tech_radar
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_PASSWORD=redis
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # fronted:
  #   container_name: frontend
  #   image: shimady563/t1-debut-team5-frontend:latest
  #   ports:
  #     - "5173:5173"
  #   depends_on:
  #     backend:
  #       condition: service_started

  postgres:
    container_name: postgres
    image: postgres:alpine
    restart: always
    user: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=tech_radar
      - POSTGRES_PASSWORD=postgres
    expose:
      - 5432
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    image: redis:alpine
    command: [ "redis-server", "--save", "", "--appendonly", "no", "--requirepass", "redis" ]
    restart: always
    volumes:
      - redis-data:/data
    expose:
      - 6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  redis-data:
