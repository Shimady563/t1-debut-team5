services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: build.Dockerfile
    ports:
      - '8080:8080'
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/tech_radar
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_PASSWORD=redis
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy

  fronted:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '5173:5173'
    depends_on:
      backend:
        condition: service_started

  postgres:
    container_name: postgres
    image: postgres:alpine
    restart: always
    user: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=tech_radar
      - POSTGRES_PASSWORD=postgres
    expose:
      - 5432
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    image: redis:alpine
    command:
      [
        'redis-server',
        '--save',
        '',
        '--appendonly',
        'no',
        '--requirepass',
        'redis',
      ]
    restart: always
    volumes:
      - redis-data:/data
    expose:
      - 6379
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    restart: always
    expose:
      - 22181
    environment:
      - ZOOKEEPER_CLIENT_PORT=22181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    restart: always
    expose:
      - 9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:22181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - zookeeper

volumes:
  postgres-data:
  redis-data:
